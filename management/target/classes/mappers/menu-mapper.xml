<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="menuMapper">
    
    <resultMap type="menu" id="menuResultSet">
        <result column="MENU_ID" property="menuId" />
        <result column="MENU_NM" property="menuNm" />
        <result column="MENU_URL" property="menuUrl" />
        <result column="MENU_LEVEL" property="menuLevel" />
        <result column="MENU_REF_ID" property="menuRefId" />
        <result column="MENU_ORDER" property="menuOrder" />
        <result column="MENU_MDF_DATE" property="menuMdfDate" />
        <result column="MENU_MDF_DATE" property="menuRegDate" />
    </resultMap>
    
    <select id="selectMaxId" resultType="_int">
        SELECT MAX(MENU_ID)
          FROM MENU
    </select>
    
    <select id="selectMenuById" resultMap="menuResultSet">
        SELECT MENU_ID
             , MENU_NM
             , MENU_URL
             , MENU_LEVEL
             , MENU_REF_ID
             , MENU_ORDER
             , MENU_MDF_DATE
             , MENU_REG_DATE
          FROM MENU
         WHERE MENU_ID = #{menuId}
    </select>
    
    <select id="selectMenuByName" resultMap="menuResultSet">
        SELECT MENU_ID
             , MENU_NM
             , MENU_URL
             , MENU_LEVEL
             , MENU_REF_ID
             , MENU_ORDER
             , MENU_MDF_DATE
             , MENU_REG_DATE
          FROM MENU
         WHERE MENU_NM = #{menuNm}
    </select>
    
    <select id="selectMenuList" resultMap="menuResultSet">
        SELECT M1.MENU_ID
             , M1.MENU_NM
             , M1.MENU_REF_ID
             , M1.MENU_LEVEL
             , M1.MENU_ORDER
             , CASE WHEN M2.MENU_ID IS NULL THEN LPAD(CONVERT(M1.MENU_ORDER, CHAR(4)), 4, '0')
                    WHEN M3.MENU_ID IS NULL THEN CONCAT(LPAD(CONVERT(M2.MENU_ORDER, CHAR(4)), 4, '0')
                                                      , LPAD(CONVERT(M1.MENU_ORDER, CHAR(4)), 4, '0'))
                    ELSE CONCAT(LPAD(CONVERT(M3.MENU_ORDER, CHAR(4)), 4, '0')
                              , LPAD(CONVERT(M2.MENU_ORDER, CHAR(4)), 4, '0')
                              , LPAD(CONVERT(M1.MENU_ORDER, CHAR(4)), 4, '0'))
                END SEQ_CHAR
          FROM MENU M1
          LEFT OUTER JOIN MENU M2 ON M1.MENU_REF_ID = M2.MENU_ID
          LEFT OUTER JOIN MENU M3 ON M2.MENU_REF_ID = M3.MENU_ID
         ORDER BY SEQ_CHAR;
    </select>
    
    <insert id="insertMenu" parameterType="menu">
        INSERT INTO MENU (
                              MENU_NM
                            , MENU_URL
                            , MENU_REF_ID
                            , MENU_LEVEL
                            , MENU_ORDER
                            , MENU_REG_DATE
                            )
                       VALUES (
                              #{menuNm}
                            , #{menuUrl}
                            , #{menuRefId}
                            , #{menuLevel}
                            , (
                               SELECT 
                                 CASE WHEN MAX(M_ORDER.MENU_ORDER) IS NULL THEN 0
                                      ELSE M_ORDER.MENU_ORDER+1
                                      END AS MAX_ORDER
                                 FROM MENU AS M_ORDER
                                WHERE M_ORDER.MENU_REF_ID = #{menuRefId}
                                  AND M_ORDER.MENU_LEVEL = #{menuLevel}
                            ) 
                            , NOW()
                            );
    </insert>
    
    <delete id="deleteMenu">
        DELETE
          FROM MENU
         WHERE MENU_ID = #{menuId}
    </delete>
    
    <update id="updateMenu">
        UPDATE MENU
           SET MENU_NM       = #{menuNm}
             , MENU_URL      = #{menuUrl}
             , MENU_LEVEL    = #{menuLevel}
             , MENU_REF_ID   = #{menuRefId}
             , MENU_ORDER    = #{menuOrder}
             , MENU_MDF_DATE = NOW()
         WHERE MENU_ID = #{menuId}
    </update>
    
    <update id="updateMenuInfo">
        UPDATE MENU
           SET MENU_NM       = #{menuNm}
             , MENU_URL      = #{menuUrl}
             , MENU_MDF_DATE = NOW()
         WHERE MENU_ID  = #{menuId}
    </update>
    
    <update id="updateBeforeSort">
        UPDATE MENU
           SET MENU_ORDER = MENU_ORDER - 1
         WHERE MENU_REF_ID = #{beforeRefId}
           AND MENU_LEVEL = #{beforeLevel}
           AND MENU_ORDER > #{beforeOrder}  <!-- 옮기기 전 메뉴의 ORDER로 수정할 것 -->
    </update>
    
    <update id="updateAfterSort">
        <![CDATA[ 
            UPDATE MENU
               SET MENU_ORDER = MENU_ORDER + 1
             WHERE MENU_REF_ID = #{menuRefId}
               AND MENU_LEVEL = #{menuLevel}
               AND MENU_ORDER >= #{menuOrder}
        ]]>
    </update>
    
    <update id="updateMoveMenu">
        UPDATE MENU
           SET MENU_REF_ID   = #{menuRefId} <!-- 메뉴가 옮겨질 곳 상위 메뉴 ID -->
             , MENU_LEVEL    = #{menuLevel} <!-- 상위 메뉴 level + 1 -->
             , MENU_ORDER    = #{menuOrder} <!-- 옮겨질 위치 순서 -->
             , MENU_MDF_DATE = NOW()
         WHERE MENU_ID = #{menuId}
    </update>
</mapper>